Test file for add_integer function

Import the function:
>>> import importlib.util
>>> spec = importlib.util.spec_from_file_location("add_integer_module", "0-add_integer.py")
>>> add_integer_module = importlib.util.module_from_spec(spec)
>>> spec.loader.exec_module(add_integer_module)
>>> add_integer = add_integer_module.add_integer

Basic tests:
>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(100.3, -2)
98

>>> add_integer(2)
100

>>> add_integer(0.1, 0.2)
0

>>> add_integer(2.9, 3.1)
5

>>> add_integer(-5, -3)
-8

>>> add_integer(0, 0)
0

Error tests:
>>> add_integer("hello", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(2, "hello")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(None, 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer([1, 2], 3)
Traceback (most recent call last):
...
TypeError: a must be an integer